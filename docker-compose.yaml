# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
services:
  akhq:
    image: tchiotludo/akhq:${AKHQ_VERSION}
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka101:9092"
    ports:
      - 8085:8080
    networks:
      - kafka

  kafka101:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    restart: on-failure
    ports:
      - 9092:9092
    environment:
      CLUSTER_ID: "t95qTZa5Mb0QpblW"
      KAFKA_BROKER_ID: 101
      KAFKA_JMX_PORT: 9991
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,CLIENT:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'CLIENT://kafka101:9092,BROKER://kafka101:9093'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '101@kafka101:9094'
      KAFKA_LISTENERS: 'CONTROLLER://kafka101:9094,CLIENT://kafka101:9092,BROKER://kafka101:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'BROKER'
      #KAFKA_LOG4J_ROOT_LOGLEVEL: DEBUG
      #KAFKA_TOOLS_LOG4J_LOGLEVEL: DEBUG
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      CONFLUENT_METRICS_ENABLE: 'false'
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_METRIC_REPORTERS: 'eu.macphail.KIP714MetricReporter'
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "http://otel-collector:4318/v1/metrics"
      OTEL_EXPORTER_OTLP_METRICS_CONNECT_TIMEOUT: "5000"
    container_name: kafka101
    volumes:
      - ./simple-metric-reporter/build/libs/simple-metric-reporter-1.0-SNAPSHOT.jar:/usr/share/java/kafka/simple-metric-reporter.jar
    healthcheck:
      test: nc -z localhost 9092
      interval: 2s
      timeout: 2s
      retries: 3
      start_period: 2s
    networks:
    - kafka

  otel-collector:
    image: otel/opentelemetry-collector:${OTEL_VERSION}
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    # environment:
    #  OTEL_LOG_LEVEL: "debug"
    ports:
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus exporter
    networks:
      - kafka
  
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - kafka

  create-topic:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    restart: on-failure
    depends_on:
      - kafka101
    command: kafka-topics --bootstrap-server kafka101:9092 --create --topic hello --replication-factor 1 --partitions 3
    container_name: create-topic
    networks:
      - kafka

  initialize-metrics-collection:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION}
    restart: on-failure
    depends_on:
      - kafka101
    command: kafka-client-metrics --bootstrap-server kafka101:9092 --metrics org.apache.kafka.producer.,org.apache.kafka.consumer. --alter --generate-name --interval 1000
    container_name: initialize-metrics-collection
    networks:
      - kafka

networks:
  kafka:
    name: kafka